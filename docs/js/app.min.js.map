{"version":3,"sources":["docs/js/app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","html5Mode","hashPrefix","run","$rootScope","getPerlinNoise","width","height","size","data","Uint8Array","perlin","ImprovedNoise","quality","z","Math","random","j","i","x","y","abs","noise","fade","t","lerp","a","b","grad","hash","h","u","v","p","floorX","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB","getRandomRange","min","max","allowNegatives","n","app","Number","prototype","mod","this","service","$q","$http","SceneOptions","StepperService","init","source","ctx","actx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","audio","Audio","addEventListener","bufferLength","console","log","createMediaElementSource","connect","destination","fftSize","options","bands","frequencyBinCount","setStep","setAudioUrl","$audioUrl","audioUrl","src","volume","audioVolume","play","stepper","getCurrentStep","url","update","getByteFrequencyData","$on","$scope","directive","AnalyserService","restrict","scope","link","element","attributes","getObjectRibbon","add","scene","object","remove","updateRibbon","c","steps","length","cpow","values","pow","tpow","step","position","cameraSpline","getPointAt","camera","cameraHeight","target","targetHeight","copy","lookAt","getMaterial","THREE","Vector2","innerWidth","innerHeight","MeshLineMaterial","color","lines","lineWidth","depthTest","updateRibbonMaterial","objects","ribbon","material","prev","Vector3","points","Array","fill","map","spline","CatmullRomCurve3","type","closed","geometry","Geometry","vertices","getPoints","line","MeshLine","setGeometry","Mesh","updateMaterial","getObjectCircles","index","state","adding","Date","now","removing","enabled","tween","kill","TweenLite","to","duration","delay","ease","Power2","easeInOut","onComplete","getLine1","addPoints","LineLoop","material1","points1","push","group1","getLine2","material2","points2","group2","l","g","pn","ratio","degrees","radians","PI","radius","increment","sincos","base","cos","sin","updateLine","audioStrength","noiseStrength","circularStrength","forEach","aia","aib","audioPow","nd","nia","iterator","nib","noisePow","noiseMap","linePow","ln","verticesNeedUpdate","updateCircle","lines1","lines2","rotation","getStepAtIndex","dummy","circle","scale","updateCircleMaterial","overLines","LineBasicMaterial","Object3D","texture","TextureLoader","load","wrapS","RepeatWrapping","wrapT","repeat","set","MeshBasicMaterial","transparent","PlaneGeometry","plane","render","controls","circles","renderer","loop","stats","begin","end","requestAnimationFrame","w2","h2","current","previous","setTimeout","Scene","PerspectiveCamera","WebGLRenderer","alpha","antialias","logarithmicDepthBuffer","setClearColor","setSize","Stats","appendChild","domElement","dom","onWindowResize","aspect","updateProjectionMatrix","constant","colors","background","controller","DatGui","then","deferred","defer","get","response","items","item","resolve","error","reject","promise","clearTweens","tweens","pop","tweenTo","callback","Color","r","onUpdate","getHexString","document","body","style","backgroundColor","setTweens","$broadcast","next","factory","onOptionsChanged","params","gui","dat","GUI","randomize","__controllers","__min","value","__max","property","updateDisplay","__color","setValue","hex","saveJson","downloadFile","onChange","circlePosition","addFolder","addColor","createElement","fileName","json","pretty","JSON","stringify","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app', ['ngRoute', 'jsonFormatter']);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$httpProvider', function($httpProvider) {\r\n        // $httpProvider.defaults.withCredentials = true;\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.config(['$locationProvider', function($locationProvider) {\r\n\r\n        // HTML5 MODE url writing method (false: #/anchor/use, true: /html5/url/use)\r\n        $locationProvider.html5Mode(true);\r\n        $locationProvider.hashPrefix('');\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.run(['$rootScope', function($rootScope) {\r\n\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    Number.prototype.mod = function(n) {\r\n        return ((this % n) + n) % n;\r\n    };\r\n\r\n    function getPerlinNoise(width, height) {\r\n        var size = width * height,\r\n            data = new Uint8Array(size),\r\n            perlin = new ImprovedNoise(),\r\n            quality = 1,\r\n            z = Math.random() * 100;\r\n        for (var j = 0; j < 4; j++) {\r\n            for (var i = 0; i < size; i++) {\r\n                var x = i % width,\r\n                    y = ~~(i / width);\r\n                data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\r\n            }\r\n            quality *= 5;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    function ImprovedNoise() {\r\n        var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10,\r\n            23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87,\r\n            174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211,\r\n            133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208,\r\n            89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,\r\n            202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119,\r\n            248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\r\n            178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,\r\n            14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205,\r\n            93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\r\n        ];\r\n        for (var i = 0; i < 256; i++) {\r\n            p[256 + i] = p[i];\r\n        }\r\n\r\n        function fade(t) {\r\n            return t * t * t * (t * (t * 6 - 15) + 10);\r\n        }\r\n\r\n        function lerp(t, a, b) {\r\n            return a + t * (b - a);\r\n        }\r\n\r\n        function grad(hash, x, y, z) {\r\n            var h = hash & 15;\r\n            var u = h < 8 ? x : y,\r\n                v = h < 4 ? y : h == 12 || h == 14 ? x : z;\r\n            return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\r\n        }\r\n\r\n        return {\r\n            noise: function(x, y, z) {\r\n                var floorX = Math.floor(x),\r\n                    floorY = Math.floor(y),\r\n                    floorZ = Math.floor(z);\r\n                var X = floorX & 255,\r\n                    Y = floorY & 255,\r\n                    Z = floorZ & 255;\r\n                x -= floorX;\r\n                y -= floorY;\r\n                z -= floorZ;\r\n                var xMinus1 = x - 1,\r\n                    yMinus1 = y - 1,\r\n                    zMinus1 = z - 1;\r\n                var u = fade(x),\r\n                    v = fade(y),\r\n                    w = fade(z);\r\n                var A = p[X] + Y,\r\n                    AA = p[A] + Z,\r\n                    AB = p[A + 1] + Z,\r\n                    B = p[X + 1] + Y,\r\n                    BA = p[B] + Z,\r\n                    BB = p[B + 1] + Z;\r\n                return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),\r\n                            grad(p[BA], xMinus1, y, z)),\r\n                        lerp(u, grad(p[AB], x, yMinus1, z),\r\n                            grad(p[BB], xMinus1, yMinus1, z))),\r\n                    lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),\r\n                            grad(p[BA + 1], xMinus1, y, z - 1)),\r\n                        lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),\r\n                            grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\r\n\r\n            }\r\n        };\r\n    }\r\n\r\n    function getRandomRange(min, max, allowNegatives) {\r\n        var n = -1 + Math.random() * 2;\r\n        var a = Math.abs(n);\r\n        var s = allowNegatives ? Math.floor(n / a) : 1;\r\n        return s * (min + (max - min) * a);\r\n    }\r\n\r\n    app.service('AnalyserService', ['$rootScope', '$q', '$http', 'SceneOptions', 'StepperService', function($rootScope, $q, $http, SceneOptions, StepperService) {\r\n\r\n        var service = this;\r\n        var options = SceneOptions;\r\n        var stepper = StepperService;\r\n\r\n        var analyser, audio, audioUrl;\r\n\r\n        function init() {\r\n            var source, ctx, actx = (window.AudioContext || window.webkitAudioContext);\r\n            source = null;\r\n            ctx = new actx();\r\n            analyser = ctx.createAnalyser();\r\n            audio = new Audio();\r\n            // audio.controls = true;\r\n            audio.addEventListener('canplay', function() {\r\n                var bufferLength;\r\n                console.log('audio canplay');\r\n                source = ctx.createMediaElementSource(audio);\r\n                source.connect(analyser);\r\n                source.connect(ctx.destination);\r\n                analyser.fftSize = options.bands * 2;\r\n                bufferLength = analyser.frequencyBinCount;\r\n                service.data = new Uint8Array(bufferLength);\r\n                // console.log('bufferLength', bufferLength);\r\n                return service.data;\r\n            });\r\n            setStep();\r\n        }\r\n\r\n        function setAudioUrl($audioUrl) {\r\n            if (audioUrl !== $audioUrl) {\r\n                audioUrl = $audioUrl;\r\n                audio.src = $audioUrl;\r\n                audio.volume = options.audioVolume;\r\n                audio.play();\r\n            }\r\n        }\r\n\r\n        function setStep() {\r\n            var step = stepper.getCurrentStep();\r\n            setAudioUrl(step.audio.url);\r\n        }\r\n\r\n        function update() {\r\n            if (service.data) {\r\n                analyser.getByteFrequencyData(service.data);\r\n            }\r\n        }\r\n\r\n        $rootScope.$on('onStepChanged', function($scope) {\r\n            setStep();\r\n        });\r\n\r\n        $rootScope.$on('onOptionsChanged', function($scope) {\r\n            if (audio) {\r\n                audio.volume = options.audioVolume;\r\n            }\r\n        });\r\n\r\n        this.audio = audio;\r\n        this.data = null;\r\n        this.init = init;\r\n        this.update = update;\r\n\r\n    }]);\r\n\r\n    app.directive('scene', ['SceneOptions', 'StepperService', 'AnalyserService', function(SceneOptions, StepperService, AnalyserService) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                data: '=scene',\r\n            },\r\n            link: function(scope, element, attributes) {\r\n                var data = scope.data;\r\n                if (!data) {\r\n                    return;\r\n                }\r\n\r\n                var objects = data.objects;\r\n\r\n                var options = SceneOptions;\r\n                var stepper = StepperService;\r\n                var analyser = AnalyserService;\r\n\r\n                options.noiseMap = getPerlinNoise(options.points, options.lines);\r\n\r\n                var stats, scene, camera, shadow, back, light, renderer, width, height, w2, h2, mouse = { x: 0, y: 0 };\r\n                var controls = null;\r\n\r\n                scope.$on('onStepChanged', function($scope, step) {\r\n                    console.log('onStepChanged', step.current);\r\n                    var circle = null;\r\n                    var current = step.current,\r\n                        previous = step.previous;\r\n                    if (current > 0) {\r\n                        circle = objects.circles[current] || getObjectCircles(current);\r\n                        circle.add();\r\n                    }\r\n                    objects.circles[current] = circle;\r\n                    setTimeout(function() {\r\n                        if (stepper.current !== previous && previous > 0) {\r\n                            var circle = objects.circles[previous];\r\n                            if (circle) {\r\n                                circle.remove();\r\n                            }\r\n                        }\r\n                    }, stepper.duration * 1000);\r\n                    console.log('objects', objects);\r\n                });\r\n\r\n                scope.$on('onOptionsChanged', function($scope) {\r\n                    // renderer.setClearColor(stepper.values.background, 1);\r\n                    if (objects.ribbon) {\r\n                        objects.ribbon.updateMaterial();\r\n                    }\r\n                    angular.forEach(objects.circles, function(circle) {\r\n                        if (circle) {\r\n                            circle.updateMaterial();\r\n                        }\r\n                    });\r\n                });\r\n\r\n                createScene();\r\n                // createLights();\r\n                createObjects();\r\n                addListeners();\r\n                loop();\r\n                analyser.init();\r\n\r\n                function createScene() {\r\n                    width = window.innerWidth;\r\n                    height = window.innerHeight;\r\n                    w2 = width / 2;\r\n                    h2 = height / 2;\r\n\r\n                    var ratio = width / height;\r\n                    var fov = 30;\r\n                    var near = 0.001;\r\n                    var far = 20000;\r\n\r\n                    scene = new THREE.Scene();\r\n                    // scene.fog = new THREE.Fog(0x000000, 300, 1000);\r\n\r\n                    camera = new THREE.PerspectiveCamera(fov, ratio, near, far);\r\n                    /*\r\n                    camera.position.z = 100;\r\n                    camera.position.y = -500;\r\n                    camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n                    */\r\n\r\n                    renderer = new THREE.WebGLRenderer({\r\n                        alpha: true,\r\n                        antialias: true,\r\n                        logarithmicDepthBuffer: true\r\n                    });\r\n\r\n                    renderer.setClearColor(0x000000, 0); // the default\r\n                    // renderer.setClearColor(stepper.values.background, 1);\r\n                    renderer.setSize(width, height);\r\n                    // renderer.shadowMap.enabled = true;\r\n\r\n                    stats = new Stats();\r\n                    element[0].appendChild(renderer.domElement);\r\n                    element[0].appendChild(stats.dom);\r\n                }\r\n\r\n                function createLights() {\r\n                    light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\r\n                    shadow = new THREE.DirectionalLight(0xffffff, 0.8);\r\n                    shadow.position.set(200, 200, 200);\r\n                    shadow.castShadow = true;\r\n                    // shadow.shadowDarkness = .2;\r\n                    back = new THREE.DirectionalLight(0xffffff, 0.4);\r\n                    back.position.set(-100, 200, 50);\r\n                    // back.shadowDarkness = .2;\r\n                    back.castShadow = true;\r\n                    scene.add(light);\r\n                    scene.add(shadow);\r\n                    scene.add(back);\r\n                }\r\n\r\n                function createObjects() {\r\n                    objects.ribbon = getObjectRibbon();\r\n                    objects.circles = new Array(stepper.steps).fill(null);\r\n                }\r\n\r\n                function getObjectRibbon() {\r\n                    var material = getMaterial();\r\n\r\n                    var prev = new THREE.Vector3();\r\n                    var points = new Array(options.ribbon.points).fill(null).map(function() {\r\n                        var p = new THREE.Vector3().copy(prev);\r\n                        prev.x += getRandomRange(500, 1000, true);\r\n                        prev.y += getRandomRange(20, 60, true);\r\n                        prev.z += getRandomRange(1000, 2000, false);\r\n                        return p;\r\n                    });\r\n\r\n                    var spline = new THREE.CatmullRomCurve3(points);\r\n                    spline.type = 'catmullrom';\r\n                    spline.closed = false;\r\n\r\n                    var cameraSpline = new THREE.CatmullRomCurve3(spline.points.map(function(p) {\r\n                        return new THREE.Vector3(p.x, p.y + 20, p.z);\r\n                    }));\r\n                    cameraSpline.type = 'catmullrom';\r\n                    cameraSpline.closed = false;\r\n\r\n                    var geometry = new THREE.Geometry();\r\n                    geometry.vertices = spline.getPoints(options.ribbon.vertices);\r\n\r\n                    var line = new MeshLine();\r\n                    line.setGeometry(geometry);\r\n\r\n                    // line.setGeometry( geometry, function( p ) { return 2; } ); // makes width 2 * lineWidth\r\n                    // line.setGeometry( geometry, function( p ) { return 1 - p; } ); // makes width taper\r\n                    // line.setGeometry( geometry, function( p ) { return 2 + Math.sin( 50 * p ); } ); // makes width sinusoidal\r\n\r\n                    var object = new THREE.Mesh(line.geometry, material);\r\n                    add();\r\n\r\n                    function add() {\r\n                        console.log('objects.ribbon.add');\r\n                        scene.add(object);\r\n                    }\r\n\r\n                    function remove() {\r\n                        console.log('objects.ribbon.remove');\r\n                        scene.remove(object);\r\n                    }\r\n\r\n                    camera.target = camera.target || new THREE.Vector3(0, 0, 0);\r\n\r\n                    function updateRibbon() {\r\n                        var c = (1 / stepper.steps.length) * 0.1;\r\n                        var cpow = stepper.values.pow;\r\n                        var tpow = (cpow + c).mod(1);\r\n                        var step = stepper.getCurrentStep();\r\n                        var position = cameraSpline.getPointAt(cpow);\r\n                        position.y += options.camera.cameraHeight;\r\n                        position.y += step.camera.cameraHeight;\r\n                        var target = cameraSpline.getPointAt(tpow);\r\n                        // var tangent = cameraSpline.getTangent(tpow).normalize().multiplyScalar(100);\r\n                        // target.add(tangent);\r\n                        target.y += options.camera.targetHeight;\r\n                        target.y += step.camera.targetHeight;\r\n                        camera.position.copy(position);\r\n                        camera.target.copy(target);\r\n                        camera.lookAt(camera.target);\r\n                    }\r\n\r\n                    function getMaterial() {\r\n                        var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\r\n                        return new MeshLineMaterial({\r\n                            color: stepper.values.lines,\r\n                            lineWidth: 5,\r\n                            depthTest: true,\r\n                            /*\r\n                            opacity: 1,\r\n                            resolution: resolution,\r\n                            sizeAttenuation: 1,\r\n                            near: 1,\r\n                            far: 1000,\r\n                            blending: THREE.AdditiveBlending,\r\n                            transparent: false,\r\n                            side: THREE.DoubleSide,\r\n                            */\r\n                        });\r\n                    }\r\n\r\n                    function updateRibbonMaterial() {\r\n                        // !!! non va bene\r\n                        objects.ribbon.material = getMaterial();\r\n                        objects.ribbon.object.material = objects.ribbon.material;\r\n                    }\r\n\r\n                    return {\r\n                        object: object,\r\n                        spline: spline,\r\n                        cameraSpline: cameraSpline,\r\n                        geometry: geometry,\r\n                        material: material,\r\n                        add: add,\r\n                        remove: remove,\r\n                        update: updateRibbon,\r\n                        updateMaterial: updateRibbonMaterial,\r\n                    };\r\n                }\r\n\r\n                function getObjectCircles(index) {\r\n                    var geometry, object, circles = [];\r\n\r\n                    // materials\r\n                    var material1 = new THREE.LineBasicMaterial({\r\n                        color: stepper.values.lines,\r\n                    });\r\n\r\n                    var material2 = new THREE.LineBasicMaterial({\r\n                        color: stepper.values.overLines,\r\n                    });\r\n\r\n                    var resolution = new THREE.Vector2(window.innerWidth, window.innerHeight);\r\n\r\n                    object = new THREE.Object3D();\r\n\r\n                    var points1 = [],\r\n                        points2 = [],\r\n                        meshLines1 = [],\r\n                        meshLines2 = [],\r\n                        meshLineGeometries1 = [],\r\n                        meshLineGeometries2 = [],\r\n                        useMeshLines = false;\r\n\r\n                    var pn = options.points,\r\n                        ln = options.lines;\r\n\r\n                    var dummy = new THREE.Object3D();\r\n                    object.add(dummy);\r\n\r\n                    // circle\r\n                    var step = stepper.steps[index];\r\n                    var texture = new THREE.TextureLoader().load(step.circle.texture);\r\n                    texture.wrapS = THREE.RepeatWrapping;\r\n                    texture.wrapT = THREE.RepeatWrapping;\r\n                    texture.repeat.set(1, 1);\r\n                    var material = new THREE.MeshBasicMaterial({\r\n                        color: 0xffffff,\r\n                        map: texture,\r\n                        transparent: true,\r\n                    });\r\n                    geometry = new THREE.PlaneGeometry(options.radius * 2 - 20, options.radius * 2 - 20, 8, 8);\r\n                    var plane = new THREE.Mesh(geometry, material);\r\n                    dummy.add(plane);\r\n                    // circle\r\n\r\n                    var group1 = new THREE.Object3D();\r\n                    dummy.add(group1);\r\n\r\n                    var group2 = new THREE.Object3D();\r\n                    dummy.add(group2);\r\n\r\n                    var lines1 = new Array(ln).fill(null).map(getLine1);\r\n                    var lines2 = new Array(ln).fill(null).map(getLine2);\r\n\r\n                    var state = {\r\n                        pow: 0,\r\n                        duration: 0.350,\r\n                        enabled: false,\r\n                        adding: false,\r\n                        removing: false,\r\n                    };\r\n\r\n                    var to = null;\r\n\r\n                    function add() {\r\n                        console.log('objects.circles.add');\r\n                        scene.add(object);\r\n                        state.adding = Date.now();\r\n                        state.removing = false;\r\n                        state.enabled = true;\r\n                        if (state.tween) {\r\n                            state.tween.kill();\r\n                        }\r\n                        state.tween = TweenLite.to(state, state.duration, {\r\n                            pow: 1,\r\n                            delay: 0,\r\n                            ease: Power2.easeInOut,\r\n                            onComplete: function() {\r\n                                state.adding = false;\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                    function remove() {\r\n                        console.log('objects.circles.remove');\r\n                        state.adding = false;\r\n                        state.removing = Date.now();\r\n                        if (state.tween) {\r\n                            state.tween.kill();\r\n                        }\r\n                        state.tween = TweenLite.to(state, state.duration, {\r\n                            pow: 0,\r\n                            delay: 0,\r\n                            ease: Power2.easeInOut,\r\n                            onComplete: function() {\r\n                                state.removing = false;\r\n                                state.enabled = false;\r\n                                scene.remove(object);\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                    var iterator = 0;\r\n\r\n                    function getLine1(v, i) {\r\n                        var geometry = new THREE.Geometry();\r\n                        var points = addPoints(geometry, i, 1);\r\n                        var line = null;\r\n                        line = new THREE.LineLoop(geometry, material1);\r\n                        points1.push(points);\r\n                        // var spline = new THREE.CatmullRomCurve3(points);\r\n                        // circle.spline = spline;\r\n                        group1.add(line);\r\n                        return line;\r\n                    }\r\n\r\n                    function getLine2(v, i) {\r\n                        var geometry = new THREE.Geometry();\r\n                        var points = addPoints(geometry, i, 2);\r\n                        var line = null;\r\n                        line = new THREE.LineLoop(geometry, material2);\r\n                        points2.push(points);\r\n                        // var spline = new THREE.CatmullRomCurve3(points);\r\n                        // circle.spline = spline;\r\n                        group2.add(line);\r\n                        return line;\r\n                    }\r\n\r\n                    function addPoints(geometry, l, g) {\r\n                        var points = new Array(pn).fill(null).map(function(v, i) {\r\n                            var ratio = i / pn;\r\n                            var degrees = 360 * ratio; // point degrees;\r\n                            degrees += 60 * index; // circle offset;\r\n                            degrees += 30 * g; // group offset;\r\n                            degrees += (360 / pn * 0.1) * l; // line offset;\r\n                            var radians = degrees * Math.PI / 180;\r\n                            var radius = options.radius;\r\n                            var increment = 0;\r\n                            if (g === 1) {\r\n                                increment += (l * l * l * 0.005);\r\n                            } else {\r\n                                increment += (l * l * l * 0.005);\r\n                            }\r\n                            v = new THREE.Vector3();\r\n                            v.sincos = {\r\n                                base: radius,\r\n                                increment: increment,\r\n                                radius: radius,\r\n                                x: Math.cos(radians),\r\n                                y: Math.sin(radians),\r\n                            };\r\n                            geometry.vertices.push(v);\r\n                            return v;\r\n                        });\r\n                        return points;\r\n                    }\r\n\r\n                    function updateLine(geometry, vertices, l, g) {\r\n                        var audioStrength = options.audioStrength,\r\n                            noiseStrength = options.noiseStrength,\r\n                            circularStrength = options.circularStrength,\r\n                            data = analyser.data;\r\n\r\n                        angular.forEach(vertices, function(v, i) {\r\n                            var aia = i % options.bands;\r\n                            var aib = (pn - 1 - i) % options.bands;\r\n                            var audioPow = data ? ((data[aia] + data[aib]) / 2) / options.bands : 0;\r\n                            // var audioPow = data[aia] / options.bands;\r\n\r\n                            var nd = g === 1 ? 0 : 64;\r\n                            var nia = l * pn + ((i + nd + iterator) % pn);\r\n                            var nib = l * pn + (((pn - 1 - i - nd) + iterator) % pn);\r\n                            var noisePow = (options.noiseMap[nia] + options.noiseMap[nib]) / 2 / 64;\r\n\r\n                            var linePow = 1 - ((ln - l) / ln * circularStrength);\r\n\r\n                            var radius = v.sincos.base +\r\n                                (v.sincos.increment * noisePow) +\r\n                                (v.sincos.increment * audioPow) +\r\n                                (noiseStrength * noisePow) * linePow +\r\n                                (audioStrength * audioPow) * linePow +\r\n                                // (audioStrength * (3 - g) * audioPow * (l * 0.1)) * linePow +\r\n                                0;\r\n\r\n                            v.sincos.radius = radius;\r\n                            // v.sincos.radius += (radius - v.sincos.radius) / 2;\r\n\r\n                            v.x = v.sincos.x * v.sincos.radius;\r\n                            v.y = v.sincos.y * v.sincos.radius;\r\n                            v.z = 0; // -l;\r\n                            // console.log(v.sincos.radius);\r\n                        });\r\n\r\n                        /*\r\n                        var f = 0;\r\n                        var l = pn - 1;\r\n                        var first = new THREE.Vector3().copy(vertices[f]);\r\n                        var last = new THREE.Vector3().copy(vertices[l]);\r\n                        vertices[f].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(0.5));\r\n                        vertices[l].add(new THREE.Vector3().subVectors(first, last).multiplyScalar(-0.5));\r\n                        */\r\n\r\n                        geometry.verticesNeedUpdate = true;\r\n\r\n                        /*\r\n                                    lines.forEach( function( l, i ) {\r\n                        if( params.animateWidth ) l.material.uniforms.lineWidth.value = params.lineWidth * ( 1 + .5 * Math.sin( 5 * t + i ) );\r\n                        if( params.autoRotate ) l.rotation.y += .125 * delta;\r\n                      l.material.uniforms.visibility.value= params.animateVisibility ? (time/3000) % 1.0 : 1.0;\r\n                                */\r\n                        /*\r\n                        if (iterator === 60 && g === 2 && l === 0) {\r\n                            console.log('vertices', geometry.vertices.map(function(v) { return v.x + ',' + v.y; }));\r\n                        }\r\n                        */\r\n                    }\r\n\r\n                    function updateCircle() {\r\n                        angular.forEach(lines1, function(line, l) {\r\n                            updateLine(line.geometry, points1[l], l, 1);\r\n                        });\r\n\r\n                        angular.forEach(lines2, function(line, l) {\r\n                            updateLine(line.geometry, points2[l], l, 2);\r\n                        });\r\n\r\n                        group1.rotation.z += 0.001;\r\n                        group2.rotation.z -= 0.001;\r\n\r\n                        var step = stepper.getStepAtIndex(index);\r\n                        dummy.position.copy(step.circle.position);\r\n\r\n                        var position = objects.ribbon.cameraSpline.getPointAt((index + 0.1) / stepper.steps.length);\r\n                        // var tangent = objects.ribbon.cameraSpline.getTangent(index + 0.1 / stepper.steps.length).normalize().multiplyScalar(300);\r\n                        // position.add(tangent);\r\n\r\n                        position.y += options.camera.targetHeight;\r\n                        object.position.copy(position);\r\n\r\n                        /*\r\n                        object.position.x += (position.x + Math.random() * 20 - object.position.x) / 20;\r\n                        object.position.y += (position.y + Math.random() * 20 - object.position.y) / 20;\r\n                        object.position.z += (position.z + Math.random() * 20 - object.position.z) / 20;\r\n                        */\r\n\r\n                        object.scale.x = object.scale.y = object.scale.z = 0.001 + 0.1 * state.pow;\r\n                        object.lookAt(camera.position);\r\n\r\n                        updateCircleMaterial();\r\n\r\n                        // iterator++;\r\n                    }\r\n\r\n                    function updateCircleMaterial() {\r\n                        material1.color = stepper.values.lines;\r\n                        material2.color = stepper.values.overLines;\r\n                    }\r\n\r\n                    return {\r\n                        add: add,\r\n                        remove: remove,\r\n                        object: object,\r\n                        state: state,\r\n                        update: updateCircle,\r\n                        updateMaterial: updateCircleMaterial,\r\n                    };\r\n                }\r\n\r\n                function render() {\r\n                    analyser.update();\r\n                    if (controls) {\r\n                        controls.update();\r\n                    }\r\n                    if (objects.ribbon) {\r\n                        objects.ribbon.update();\r\n                    }\r\n                    angular.forEach(objects.circles, function(circle) {\r\n                        if (circle && circle.state.enabled) {\r\n                            circle.update();\r\n                        }\r\n                    });\r\n                    renderer.render(scene, camera);\r\n                }\r\n\r\n                function loop() {\r\n                    stats.begin();\r\n                    render();\r\n                    stats.end();\r\n                    requestAnimationFrame(loop);\r\n                }\r\n\r\n                function addListeners() {\r\n                    function handleMouseMove(event) {\r\n                        mouse = { x: event.clientX, y: event.clientY };\r\n                    }\r\n\r\n                    function handleMouseDown(event) {\r\n                        //\r\n                    }\r\n\r\n                    function handleMouseUp(event) {\r\n                        //\r\n                    }\r\n\r\n                    function handleTouchStart(event) {\r\n                        if (event.touches.length > 1) {\r\n                            event.preventDefault();\r\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\r\n                        }\r\n                    }\r\n\r\n                    function handleTouchEnd(event) {\r\n                        mousePos = { x: windowHalfX, y: windowHalfY };\r\n                    }\r\n\r\n                    function handleTouchMove(event) {\r\n                        if (event.touches.length == 1) {\r\n                            event.preventDefault();\r\n                            mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\r\n                        }\r\n                    }\r\n\r\n                    function onWindowResize() {\r\n                        width = window.innerWidth;\r\n                        height = window.innerHeight;\r\n                        w2 = width / 2;\r\n                        h2 = height / 2;\r\n                        renderer.setSize(width, height);\r\n                        camera.aspect = width / height;\r\n                        camera.updateProjectionMatrix();\r\n                    }\r\n                    window.addEventListener('resize', onWindowResize, false);\r\n                    /*\r\n                    document.addEventListener('mousemove', handleMouseMove, false);\r\n                    document.addEventListener('mousedown', handleMouseDown, false);\r\n                    document.addEventListener('mouseup', handleMouseUp, false);\r\n                    document.addEventListener('touchstart', handleTouchStart, false);\r\n                    document.addEventListener('touchend', handleTouchEnd, false);\r\n                    document.addEventListener('touchmove', handleTouchMove, false);\r\n                    */\r\n                }\r\n\r\n            }\r\n        };\r\n    }]);\r\n\r\n}());\n/* global angular */\r\n\r\n(function() {\r\n    \"use strict\";\r\n\r\n    var app = angular.module('app');\r\n\r\n    app.constant('SceneOptions', {\r\n        colors: {\r\n            background: 0xeae8e8,\r\n            lines: 0x3353a4,\r\n            overLines: 0xb4bfdd,\r\n        },\r\n        camera: {\r\n            cameraHeight: 0,\r\n            targetHeight: 5,\r\n        },\r\n        circle: {\r\n            position: new THREE.Vector3(),\r\n        },\r\n        ribbon: {\r\n            points: 40, // 12\r\n            vertices: 3600, // 1200\r\n        },\r\n        audioVolume: 0.9,\r\n        bands: 128,\r\n        points: 128,\r\n        lines: 32,\r\n        radius: 200,\r\n        audioStrength: 100,\r\n        noiseStrength: 25,\r\n        circularStrength: 0.90,\r\n    });\r\n\r\n    app.controller('RootCtrl', ['$scope', 'SceneOptions', 'StepperService', 'DatGui', function($scope, SceneOptions, StepperService, DatGui) {\r\n\r\n        var scene = {\r\n            objects: {},\r\n            options: SceneOptions,\r\n            stepper: StepperService,\r\n        };\r\n\r\n        var objects = scene.objects;\r\n        var options = scene.options;\r\n        var stepper = scene.stepper;\r\n\r\n        stepper.init().then(function() {\r\n            $scope.scene = scene;\r\n            $scope.stepper = stepper;\r\n            var gui = new DatGui();\r\n        });\r\n\r\n    }]);\r\n\r\n    app.service('StepperService', ['$rootScope', '$q', '$http', 'SceneOptions', function($rootScope, $q, $http, SceneOptions) {\r\n\r\n        var stepper = this;\r\n        var options = SceneOptions;\r\n\r\n        var current = 0;\r\n        var duration = 2.500; // sec\r\n        var steps = [];\r\n        var tweens = [];\r\n\r\n        var values = {\r\n            pow: 0,\r\n            background: new THREE.Color(options.colors.background),\r\n            lines: new THREE.Color(options.colors.lines),\r\n            overLines: new THREE.Color(options.colors.overLines),\r\n        };\r\n\r\n        function getItems() {\r\n            var items = new Array(24).fill().map(function(v, i) {\r\n                return {\r\n                    id: i + 1,\r\n                    name: 'Step ' + (i + 1),\r\n                    colors: angular.copy(SceneOptions.colors),\r\n                    camera: {\r\n                        cameraHeight: 0,\r\n                        targetHeight: 0,\r\n                    },\r\n                    circle: {\r\n                        position: new THREE.Vector3(0, 0, 0),\r\n                        texture: 'img/rossini-01.png',\r\n                    },\r\n                    audio: {\r\n                        url: \"audio/07-rossini-192.mp3\",\r\n                    },\r\n                };\r\n            });\r\n            return items;\r\n        }\r\n\r\n        function init() {\r\n            var deferred = $q.defer();\r\n            $http.get('json/rossini.js').then(function(response) {\r\n                var items = response.data; // getItems(); // \r\n                angular.forEach(items, function(item) {\r\n                    item.circle.position = new THREE.Vector3().copy(item.circle.position);\r\n                    steps.push(item);\r\n                });\r\n                console.log('StepperService.load', steps);\r\n                deferred.resolve(steps);\r\n\r\n            }, function(error) {\r\n                deferred.reject(error);\r\n\r\n            });\r\n            return deferred.promise;\r\n        }\r\n\r\n        function clearTweens() {\r\n            while (tweens.length) {\r\n                var tween = tweens.pop();\r\n                tween.kill();\r\n            }\r\n        }\r\n\r\n        function tweenTo(pow, colors, duration, callback) {\r\n            clearTweens();\r\n            var background = new THREE.Color(colors.background);\r\n            var lines = new THREE.Color(colors.lines);\r\n            var overLines = new THREE.Color(colors.overLines);\r\n            tweens.push(TweenLite.to(stepper.values, duration, {\r\n                pow: pow,\r\n                delay: 0,\r\n                ease: Power2.easeInOut,\r\n                onComplete: function() {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                },\r\n            }));\r\n            tweens.push(TweenLite.to(stepper.values.background, duration, {\r\n                r: background.r,\r\n                g: background.g,\r\n                b: background.b,\r\n                delay: 0,\r\n                ease: Power2.easeInOut,\r\n                onUpdate: function() {\r\n                    var color = stepper.values.background.getHexString();\r\n                    document.body.style.backgroundColor = '#' + color;\r\n                }\r\n            }));\r\n            tweens.push(TweenLite.to(stepper.values.lines, duration, {\r\n                r: lines.r,\r\n                g: lines.g,\r\n                b: lines.b,\r\n                delay: 0,\r\n                ease: Power2.easeInOut,\r\n            }));\r\n            tweens.push(TweenLite.to(stepper.values.overLines, duration, {\r\n                r: overLines.r,\r\n                g: overLines.g,\r\n                b: overLines.b,\r\n                delay: 0,\r\n                ease: Power2.easeInOut,\r\n            }));\r\n        }\r\n\r\n        function setTweens(duration) {\r\n            var index = stepper.current;\r\n            var step = steps[index];\r\n            tweenTo(index / steps.length, step.colors, duration, function() {\r\n                clearTweens();\r\n                console.log(step, stepper.values);\r\n            });\r\n        }\r\n\r\n        $rootScope.$on('onOptionsChanged', function() {\r\n            setTweens(0.250);\r\n        });\r\n\r\n        function setStep(index) {\r\n            var previous = stepper.current || 0;\r\n            stepper.current = index;\r\n            var step = steps[index];\r\n            options.colors.background = step.colors.background;\r\n            options.colors.lines = step.colors.lines;\r\n            options.colors.overLines = step.colors.overLines;\r\n            options.camera.cameraHeight = step.camera.cameraHeight;\r\n            options.camera.targetHeight = step.camera.targetHeight;\r\n            options.circle.position.copy(step.circle.position);\r\n            $rootScope.$broadcast('onStepChanged', { current: index, previous: previous });\r\n            setTweens(stepper.duration);\r\n        }\r\n\r\n        function next() {\r\n            current++;\r\n            current = Math.min(steps.length - 1, current);\r\n            setStep(current);\r\n        }\r\n\r\n        function previous() {\r\n            current--;\r\n            current = Math.max(0, current);\r\n            setStep(current);\r\n        }\r\n\r\n        function getCurrentStep() {\r\n            return steps[current];\r\n        }\r\n\r\n        function getStepAtIndex(index) {\r\n            return steps[index];\r\n        }\r\n\r\n        this.init = init;\r\n        this.values = values;\r\n        this.duration = duration;\r\n        this.steps = steps;\r\n        this.current = current;\r\n        this.next = next;\r\n        this.previous = previous;\r\n        this.getCurrentStep = getCurrentStep;\r\n        this.getStepAtIndex = getStepAtIndex;\r\n\r\n    }]);\r\n\r\n    app.factory('DatGui', ['$rootScope', 'SceneOptions', 'StepperService', function($rootScope, SceneOptions, StepperService) {\r\n\r\n        var downloadFile = function downloadFile() {\r\n            var a = document.createElement(\"a\");\r\n            document.body.appendChild(a);\r\n            a.style = \"display: none\";\r\n            return function(data, fileName, json, pretty) {\r\n                if (json) {\r\n                    if (pretty) {\r\n                        data = JSON.stringify(data, null, 2); // spacing level = 2\r\n                    } else {\r\n                        data = JSON.stringify(data);\r\n                    }\r\n                }\r\n                var blob = new Blob([data], { type: \"octet/stream\" }),\r\n                    url = window.URL.createObjectURL(blob);\r\n                a.href = url;\r\n                a.download = fileName;\r\n                a.click();\r\n                window.URL.revokeObjectURL(url);\r\n            };\r\n        }();\r\n\r\n        function DatGui() {\r\n            var options = SceneOptions;\r\n            var stepper = StepperService;\r\n            var gui = new dat.GUI();\r\n\r\n            options.randomize = function() {\r\n                for (var i = 0; i < gui.__controllers.length; i++) {\r\n                    var c = gui.__controllers[i];\r\n                    if (c.__min) {\r\n                        var value = c.__min + (c.__max - c.__min) * Math.random();\r\n                        this[c.property] = value;\r\n                        c.updateDisplay();\r\n                    }\r\n                    if (c.__color) {\r\n                        c.__color.r = Math.floor(Math.random() * 255);\r\n                        c.__color.g = Math.floor(Math.random() * 255);\r\n                        c.__color.b = Math.floor(Math.random() * 255);\r\n                        c.updateDisplay();\r\n                        c.setValue(c.__color.hex);\r\n                    }\r\n                }\r\n            };\r\n\r\n            options.saveJson = function() {\r\n                console.log('saveJson');\r\n                downloadFile(stepper.steps, 'rossini.js', true, true);\r\n            };\r\n\r\n            function onOptionsChanged(params) {\r\n                var step = stepper.getCurrentStep();\r\n                step.colors.background = options.colors.background;\r\n                step.colors.lines = options.colors.lines;\r\n                step.colors.overLines = options.colors.overLines;\r\n                step.camera.cameraHeight = options.camera.cameraHeight;\r\n                step.camera.targetHeight = options.camera.targetHeight;\r\n                step.circle.position.copy(options.circle.position);\r\n                $rootScope.$broadcast('onOptionsChanged');\r\n            }\r\n\r\n            gui.closed = true;\r\n            gui.add(options.camera, 'cameraHeight', 20.0, 100.0).onChange(onOptionsChanged);\r\n            gui.add(options.camera, 'targetHeight', 20.0, 100.0).onChange(onOptionsChanged);\r\n            var circlePosition = gui.addFolder('circlePosition');\r\n            circlePosition.add(options.circle.position, 'x', -300, 300).onChange(onOptionsChanged);\r\n            circlePosition.add(options.circle.position, 'y', -300, 300).onChange(onOptionsChanged);\r\n            circlePosition.add(options.circle.position, 'z', -300, 300).onChange(onOptionsChanged);\r\n            var colors = gui.addFolder('colors');\r\n            colors.addColor(options.colors, 'background').onChange(onOptionsChanged);\r\n            colors.addColor(options.colors, 'lines').onChange(onOptionsChanged);\r\n            colors.addColor(options.colors, 'overLines').onChange(onOptionsChanged);\r\n            gui.add(options, 'audioVolume', 0.01, 1.0).onChange(onOptionsChanged);\r\n            gui.add(options, 'audioStrength', 10, 100).onChange(onOptionsChanged);\r\n            gui.add(options, 'noiseStrength', 10, 100).onChange(onOptionsChanged);\r\n            gui.add(options, 'circularStrength', 0.01, 0.90).onChange(onOptionsChanged);\r\n            gui.add(options, 'randomize');\r\n            gui.add(options, 'saveJson');\r\n\r\n            onOptionsChanged();\r\n\r\n            return gui;\r\n        }\r\n\r\n        return DatGui;\r\n\r\n    }]);\r\n\r\n}());"]}